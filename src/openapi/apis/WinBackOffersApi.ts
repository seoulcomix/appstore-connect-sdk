/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  WinBackOfferCreateRequest,
  WinBackOfferPricesResponse,
  WinBackOfferResponse,
  WinBackOfferUpdateRequest,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    WinBackOfferCreateRequestFromJSON,
    WinBackOfferCreateRequestToJSON,
    WinBackOfferPricesResponseFromJSON,
    WinBackOfferPricesResponseToJSON,
    WinBackOfferResponseFromJSON,
    WinBackOfferResponseToJSON,
    WinBackOfferUpdateRequestFromJSON,
    WinBackOfferUpdateRequestToJSON,
} from '../models';

export interface WinBackOffersCreateInstanceRequest {
    winBackOfferCreateRequest: WinBackOfferCreateRequest;
}

export interface WinBackOffersDeleteInstanceRequest {
    id: string;
}

export interface WinBackOffersGetInstanceRequest {
    id: string;
    fieldsWinBackOffers?: Array<WinBackOffersGetInstanceFieldsWinBackOffersEnum>;
    fieldsWinBackOfferPrices?: Array<WinBackOffersGetInstanceFieldsWinBackOfferPricesEnum>;
    include?: Array<WinBackOffersGetInstanceIncludeEnum>;
    limitPrices?: number;
}

export interface WinBackOffersPricesGetToManyRelatedRequest {
    id: string;
    filterTerritory?: Array<string>;
    fieldsWinBackOfferPrices?: Array<WinBackOffersPricesGetToManyRelatedFieldsWinBackOfferPricesEnum>;
    fieldsTerritories?: Array<WinBackOffersPricesGetToManyRelatedFieldsTerritoriesEnum>;
    fieldsSubscriptionPricePoints?: Array<WinBackOffersPricesGetToManyRelatedFieldsSubscriptionPricePointsEnum>;
    limit?: number;
    include?: Array<WinBackOffersPricesGetToManyRelatedIncludeEnum>;
}

export interface WinBackOffersUpdateInstanceRequest {
    id: string;
    winBackOfferUpdateRequest: WinBackOfferUpdateRequest;
}

/**
 * 
 */
export class WinBackOffersApi extends runtime.BaseAPI {

    /**
     */
    async winBackOffersCreateInstanceRaw(requestParameters: WinBackOffersCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WinBackOfferResponse>> {
        if (requestParameters.winBackOfferCreateRequest === null || requestParameters.winBackOfferCreateRequest === undefined) {
            throw new runtime.RequiredError('winBackOfferCreateRequest','Required parameter requestParameters.winBackOfferCreateRequest was null or undefined when calling winBackOffersCreateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/winBackOffers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WinBackOfferCreateRequestToJSON(requestParameters.winBackOfferCreateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WinBackOfferResponseFromJSON(jsonValue));
    }

    /**
     */
    async winBackOffersCreateInstance(requestParameters: WinBackOffersCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WinBackOfferResponse> {
        const response = await this.winBackOffersCreateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async winBackOffersDeleteInstanceRaw(requestParameters: WinBackOffersDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling winBackOffersDeleteInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/winBackOffers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async winBackOffersDeleteInstance(requestParameters: WinBackOffersDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.winBackOffersDeleteInstanceRaw(requestParameters, initOverrides);
    }

    /**
     */
    async winBackOffersGetInstanceRaw(requestParameters: WinBackOffersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WinBackOfferResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling winBackOffersGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsWinBackOffers) {
            queryParameters['fields[winBackOffers]'] = requestParameters.fieldsWinBackOffers.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsWinBackOfferPrices) {
            queryParameters['fields[winBackOfferPrices]'] = requestParameters.fieldsWinBackOfferPrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitPrices !== undefined) {
            queryParameters['limit[prices]'] = requestParameters.limitPrices;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/winBackOffers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WinBackOfferResponseFromJSON(jsonValue));
    }

    /**
     */
    async winBackOffersGetInstance(requestParameters: WinBackOffersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WinBackOfferResponse> {
        const response = await this.winBackOffersGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async winBackOffersPricesGetToManyRelatedRaw(requestParameters: WinBackOffersPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WinBackOfferPricesResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling winBackOffersPricesGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsWinBackOfferPrices) {
            queryParameters['fields[winBackOfferPrices]'] = requestParameters.fieldsWinBackOfferPrices.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsSubscriptionPricePoints) {
            queryParameters['fields[subscriptionPricePoints]'] = requestParameters.fieldsSubscriptionPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/winBackOffers/{id}/prices`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WinBackOfferPricesResponseFromJSON(jsonValue));
    }

    /**
     */
    async winBackOffersPricesGetToManyRelated(requestParameters: WinBackOffersPricesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WinBackOfferPricesResponse> {
        const response = await this.winBackOffersPricesGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async winBackOffersUpdateInstanceRaw(requestParameters: WinBackOffersUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WinBackOfferResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling winBackOffersUpdateInstance.');
        }

        if (requestParameters.winBackOfferUpdateRequest === null || requestParameters.winBackOfferUpdateRequest === undefined) {
            throw new runtime.RequiredError('winBackOfferUpdateRequest','Required parameter requestParameters.winBackOfferUpdateRequest was null or undefined when calling winBackOffersUpdateInstance.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/winBackOffers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: WinBackOfferUpdateRequestToJSON(requestParameters.winBackOfferUpdateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WinBackOfferResponseFromJSON(jsonValue));
    }

    /**
     */
    async winBackOffersUpdateInstance(requestParameters: WinBackOffersUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WinBackOfferResponse> {
        const response = await this.winBackOffersUpdateInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const WinBackOffersGetInstanceFieldsWinBackOffersEnum = {
    ReferenceName: 'referenceName',
    OfferId: 'offerId',
    Duration: 'duration',
    OfferMode: 'offerMode',
    PeriodCount: 'periodCount',
    CustomerEligibilityPaidSubscriptionDurationInMonths: 'customerEligibilityPaidSubscriptionDurationInMonths',
    CustomerEligibilityTimeSinceLastSubscribedInMonths: 'customerEligibilityTimeSinceLastSubscribedInMonths',
    CustomerEligibilityWaitBetweenOffersInMonths: 'customerEligibilityWaitBetweenOffersInMonths',
    StartDate: 'startDate',
    EndDate: 'endDate',
    Priority: 'priority',
    PromotionIntent: 'promotionIntent',
    Prices: 'prices'
} as const;
export type WinBackOffersGetInstanceFieldsWinBackOffersEnum = typeof WinBackOffersGetInstanceFieldsWinBackOffersEnum[keyof typeof WinBackOffersGetInstanceFieldsWinBackOffersEnum];
/**
 * @export
 */
export const WinBackOffersGetInstanceFieldsWinBackOfferPricesEnum = {
    Territory: 'territory',
    SubscriptionPricePoint: 'subscriptionPricePoint'
} as const;
export type WinBackOffersGetInstanceFieldsWinBackOfferPricesEnum = typeof WinBackOffersGetInstanceFieldsWinBackOfferPricesEnum[keyof typeof WinBackOffersGetInstanceFieldsWinBackOfferPricesEnum];
/**
 * @export
 */
export const WinBackOffersGetInstanceIncludeEnum = {
    Prices: 'prices'
} as const;
export type WinBackOffersGetInstanceIncludeEnum = typeof WinBackOffersGetInstanceIncludeEnum[keyof typeof WinBackOffersGetInstanceIncludeEnum];
/**
 * @export
 */
export const WinBackOffersPricesGetToManyRelatedFieldsWinBackOfferPricesEnum = {
    Territory: 'territory',
    SubscriptionPricePoint: 'subscriptionPricePoint'
} as const;
export type WinBackOffersPricesGetToManyRelatedFieldsWinBackOfferPricesEnum = typeof WinBackOffersPricesGetToManyRelatedFieldsWinBackOfferPricesEnum[keyof typeof WinBackOffersPricesGetToManyRelatedFieldsWinBackOfferPricesEnum];
/**
 * @export
 */
export const WinBackOffersPricesGetToManyRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type WinBackOffersPricesGetToManyRelatedFieldsTerritoriesEnum = typeof WinBackOffersPricesGetToManyRelatedFieldsTerritoriesEnum[keyof typeof WinBackOffersPricesGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const WinBackOffersPricesGetToManyRelatedFieldsSubscriptionPricePointsEnum = {
    CustomerPrice: 'customerPrice',
    Proceeds: 'proceeds',
    ProceedsYear2: 'proceedsYear2',
    Territory: 'territory',
    Equalizations: 'equalizations'
} as const;
export type WinBackOffersPricesGetToManyRelatedFieldsSubscriptionPricePointsEnum = typeof WinBackOffersPricesGetToManyRelatedFieldsSubscriptionPricePointsEnum[keyof typeof WinBackOffersPricesGetToManyRelatedFieldsSubscriptionPricePointsEnum];
/**
 * @export
 */
export const WinBackOffersPricesGetToManyRelatedIncludeEnum = {
    Territory: 'territory',
    SubscriptionPricePoint: 'subscriptionPricePoint'
} as const;
export type WinBackOffersPricesGetToManyRelatedIncludeEnum = typeof WinBackOffersPricesGetToManyRelatedIncludeEnum[keyof typeof WinBackOffersPricesGetToManyRelatedIncludeEnum];
