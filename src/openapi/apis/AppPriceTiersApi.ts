/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppPricePointsResponse,
  AppPriceTierResponse,
  AppPriceTiersResponse,
  ErrorResponse,
} from '../models';
import {
    AppPricePointsResponseFromJSON,
    AppPricePointsResponseToJSON,
    AppPriceTierResponseFromJSON,
    AppPriceTierResponseToJSON,
    AppPriceTiersResponseFromJSON,
    AppPriceTiersResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface AppPriceTiersGetCollectionRequest {
    filterId?: Array<string>;
    fieldsAppPriceTiers?: Array<AppPriceTiersGetCollectionFieldsAppPriceTiersEnum>;
    limit?: number;
    include?: Array<AppPriceTiersGetCollectionIncludeEnum>;
    fieldsAppPricePoints?: Array<AppPriceTiersGetCollectionFieldsAppPricePointsEnum>;
    limitPricePoints?: number;
}

export interface AppPriceTiersGetInstanceRequest {
    id: string;
    fieldsAppPriceTiers?: Array<AppPriceTiersGetInstanceFieldsAppPriceTiersEnum>;
    include?: Array<AppPriceTiersGetInstanceIncludeEnum>;
    fieldsAppPricePoints?: Array<AppPriceTiersGetInstanceFieldsAppPricePointsEnum>;
    limitPricePoints?: number;
}

export interface AppPriceTiersPricePointsGetToManyRelatedRequest {
    id: string;
    filterTerritory?: Array<string>;
    fieldsAppPriceTiers?: Array<AppPriceTiersPricePointsGetToManyRelatedFieldsAppPriceTiersEnum>;
    fieldsAppPricePoints?: Array<AppPriceTiersPricePointsGetToManyRelatedFieldsAppPricePointsEnum>;
    fieldsTerritories?: Array<AppPriceTiersPricePointsGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
    include?: Array<AppPriceTiersPricePointsGetToManyRelatedIncludeEnum>;
}

/**
 * 
 */
export class AppPriceTiersApi extends runtime.BaseAPI {

    /**
     */
    async appPriceTiersGetCollectionRaw(requestParameters: AppPriceTiersGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPriceTiersResponse>> {
        const queryParameters: any = {};

        if (requestParameters.filterId) {
            queryParameters['filter[id]'] = requestParameters.filterId.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPriceTiers) {
            queryParameters['fields[appPriceTiers]'] = requestParameters.fieldsAppPriceTiers.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitPricePoints !== undefined) {
            queryParameters['limit[pricePoints]'] = requestParameters.limitPricePoints;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceTiers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPriceTiersResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceTiersGetCollection(requestParameters: AppPriceTiersGetCollectionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPriceTiersResponse> {
        const response = await this.appPriceTiersGetCollectionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceTiersGetInstanceRaw(requestParameters: AppPriceTiersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPriceTierResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceTiersGetInstance.');
        }

        const queryParameters: any = {};

        if (requestParameters.fieldsAppPriceTiers) {
            queryParameters['fields[appPriceTiers]'] = requestParameters.fieldsAppPriceTiers.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limitPricePoints !== undefined) {
            queryParameters['limit[pricePoints]'] = requestParameters.limitPricePoints;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceTiers/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPriceTierResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceTiersGetInstance(requestParameters: AppPriceTiersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPriceTierResponse> {
        const response = await this.appPriceTiersGetInstanceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appPriceTiersPricePointsGetToManyRelatedRaw(requestParameters: AppPriceTiersPricePointsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppPricePointsResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appPriceTiersPricePointsGetToManyRelated.');
        }

        const queryParameters: any = {};

        if (requestParameters.filterTerritory) {
            queryParameters['filter[territory]'] = requestParameters.filterTerritory.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPriceTiers) {
            queryParameters['fields[appPriceTiers]'] = requestParameters.fieldsAppPriceTiers.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsAppPricePoints) {
            queryParameters['fields[appPricePoints]'] = requestParameters.fieldsAppPricePoints.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.fieldsTerritories) {
            queryParameters['fields[territories]'] = requestParameters.fieldsTerritories.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.include) {
            queryParameters['include'] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("itc-bearer-token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/appPriceTiers/{id}/pricePoints`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppPricePointsResponseFromJSON(jsonValue));
    }

    /**
     */
    async appPriceTiersPricePointsGetToManyRelated(requestParameters: AppPriceTiersPricePointsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppPricePointsResponse> {
        const response = await this.appPriceTiersPricePointsGetToManyRelatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AppPriceTiersGetCollectionFieldsAppPriceTiersEnum = {
    PricePoints: 'pricePoints'
} as const;
export type AppPriceTiersGetCollectionFieldsAppPriceTiersEnum = typeof AppPriceTiersGetCollectionFieldsAppPriceTiersEnum[keyof typeof AppPriceTiersGetCollectionFieldsAppPriceTiersEnum];
/**
 * @export
 */
export const AppPriceTiersGetCollectionIncludeEnum = {
    PricePoints: 'pricePoints'
} as const;
export type AppPriceTiersGetCollectionIncludeEnum = typeof AppPriceTiersGetCollectionIncludeEnum[keyof typeof AppPriceTiersGetCollectionIncludeEnum];
/**
 * @export
 */
export const AppPriceTiersGetCollectionFieldsAppPricePointsEnum = {
    CustomerPrice: 'customerPrice',
    PriceTier: 'priceTier',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPriceTiersGetCollectionFieldsAppPricePointsEnum = typeof AppPriceTiersGetCollectionFieldsAppPricePointsEnum[keyof typeof AppPriceTiersGetCollectionFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPriceTiersGetInstanceFieldsAppPriceTiersEnum = {
    PricePoints: 'pricePoints'
} as const;
export type AppPriceTiersGetInstanceFieldsAppPriceTiersEnum = typeof AppPriceTiersGetInstanceFieldsAppPriceTiersEnum[keyof typeof AppPriceTiersGetInstanceFieldsAppPriceTiersEnum];
/**
 * @export
 */
export const AppPriceTiersGetInstanceIncludeEnum = {
    PricePoints: 'pricePoints'
} as const;
export type AppPriceTiersGetInstanceIncludeEnum = typeof AppPriceTiersGetInstanceIncludeEnum[keyof typeof AppPriceTiersGetInstanceIncludeEnum];
/**
 * @export
 */
export const AppPriceTiersGetInstanceFieldsAppPricePointsEnum = {
    CustomerPrice: 'customerPrice',
    PriceTier: 'priceTier',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPriceTiersGetInstanceFieldsAppPricePointsEnum = typeof AppPriceTiersGetInstanceFieldsAppPricePointsEnum[keyof typeof AppPriceTiersGetInstanceFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPriceTiersPricePointsGetToManyRelatedFieldsAppPriceTiersEnum = {
    PricePoints: 'pricePoints'
} as const;
export type AppPriceTiersPricePointsGetToManyRelatedFieldsAppPriceTiersEnum = typeof AppPriceTiersPricePointsGetToManyRelatedFieldsAppPriceTiersEnum[keyof typeof AppPriceTiersPricePointsGetToManyRelatedFieldsAppPriceTiersEnum];
/**
 * @export
 */
export const AppPriceTiersPricePointsGetToManyRelatedFieldsAppPricePointsEnum = {
    CustomerPrice: 'customerPrice',
    PriceTier: 'priceTier',
    Proceeds: 'proceeds',
    Territory: 'territory'
} as const;
export type AppPriceTiersPricePointsGetToManyRelatedFieldsAppPricePointsEnum = typeof AppPriceTiersPricePointsGetToManyRelatedFieldsAppPricePointsEnum[keyof typeof AppPriceTiersPricePointsGetToManyRelatedFieldsAppPricePointsEnum];
/**
 * @export
 */
export const AppPriceTiersPricePointsGetToManyRelatedFieldsTerritoriesEnum = {
    Currency: 'currency'
} as const;
export type AppPriceTiersPricePointsGetToManyRelatedFieldsTerritoriesEnum = typeof AppPriceTiersPricePointsGetToManyRelatedFieldsTerritoriesEnum[keyof typeof AppPriceTiersPricePointsGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export const AppPriceTiersPricePointsGetToManyRelatedIncludeEnum = {
    PriceTier: 'priceTier',
    Territory: 'territory'
} as const;
export type AppPriceTiersPricePointsGetToManyRelatedIncludeEnum = typeof AppPriceTiersPricePointsGetToManyRelatedIncludeEnum[keyof typeof AppPriceTiersPricePointsGetToManyRelatedIncludeEnum];
