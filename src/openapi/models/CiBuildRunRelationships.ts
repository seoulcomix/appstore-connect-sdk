/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnalyticsReportInstanceRelationshipsSegments } from './AnalyticsReportInstanceRelationshipsSegments';
import {
    AnalyticsReportInstanceRelationshipsSegmentsFromJSON,
    AnalyticsReportInstanceRelationshipsSegmentsFromJSONTyped,
    AnalyticsReportInstanceRelationshipsSegmentsToJSON,
} from './AnalyticsReportInstanceRelationshipsSegments';
import type { AppRelationshipsBuilds } from './AppRelationshipsBuilds';
import {
    AppRelationshipsBuildsFromJSON,
    AppRelationshipsBuildsFromJSONTyped,
    AppRelationshipsBuildsToJSON,
} from './AppRelationshipsBuilds';
import type { CiBuildRunRelationshipsProduct } from './CiBuildRunRelationshipsProduct';
import {
    CiBuildRunRelationshipsProductFromJSON,
    CiBuildRunRelationshipsProductFromJSONTyped,
    CiBuildRunRelationshipsProductToJSON,
} from './CiBuildRunRelationshipsProduct';
import type { CiBuildRunRelationshipsPullRequest } from './CiBuildRunRelationshipsPullRequest';
import {
    CiBuildRunRelationshipsPullRequestFromJSON,
    CiBuildRunRelationshipsPullRequestFromJSONTyped,
    CiBuildRunRelationshipsPullRequestToJSON,
} from './CiBuildRunRelationshipsPullRequest';
import type { CiBuildRunRelationshipsSourceBranchOrTag } from './CiBuildRunRelationshipsSourceBranchOrTag';
import {
    CiBuildRunRelationshipsSourceBranchOrTagFromJSON,
    CiBuildRunRelationshipsSourceBranchOrTagFromJSONTyped,
    CiBuildRunRelationshipsSourceBranchOrTagToJSON,
} from './CiBuildRunRelationshipsSourceBranchOrTag';
import type { CiBuildRunRelationshipsWorkflow } from './CiBuildRunRelationshipsWorkflow';
import {
    CiBuildRunRelationshipsWorkflowFromJSON,
    CiBuildRunRelationshipsWorkflowFromJSONTyped,
    CiBuildRunRelationshipsWorkflowToJSON,
} from './CiBuildRunRelationshipsWorkflow';

/**
 * 
 * @export
 * @interface CiBuildRunRelationships
 */
export interface CiBuildRunRelationships {
    /**
     * 
     * @type {AppRelationshipsBuilds}
     * @memberof CiBuildRunRelationships
     */
    builds?: AppRelationshipsBuilds;
    /**
     * 
     * @type {CiBuildRunRelationshipsWorkflow}
     * @memberof CiBuildRunRelationships
     */
    workflow?: CiBuildRunRelationshipsWorkflow;
    /**
     * 
     * @type {CiBuildRunRelationshipsProduct}
     * @memberof CiBuildRunRelationships
     */
    product?: CiBuildRunRelationshipsProduct;
    /**
     * 
     * @type {CiBuildRunRelationshipsSourceBranchOrTag}
     * @memberof CiBuildRunRelationships
     */
    sourceBranchOrTag?: CiBuildRunRelationshipsSourceBranchOrTag;
    /**
     * 
     * @type {CiBuildRunRelationshipsSourceBranchOrTag}
     * @memberof CiBuildRunRelationships
     */
    destinationBranch?: CiBuildRunRelationshipsSourceBranchOrTag;
    /**
     * 
     * @type {AnalyticsReportInstanceRelationshipsSegments}
     * @memberof CiBuildRunRelationships
     */
    actions?: AnalyticsReportInstanceRelationshipsSegments;
    /**
     * 
     * @type {CiBuildRunRelationshipsPullRequest}
     * @memberof CiBuildRunRelationships
     */
    pullRequest?: CiBuildRunRelationshipsPullRequest;
}

/**
 * Check if a given object implements the CiBuildRunRelationships interface.
 */
export function instanceOfCiBuildRunRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CiBuildRunRelationshipsFromJSON(json: any): CiBuildRunRelationships {
    return CiBuildRunRelationshipsFromJSONTyped(json, false);
}

export function CiBuildRunRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CiBuildRunRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'builds': !exists(json, 'builds') ? undefined : AppRelationshipsBuildsFromJSON(json['builds']),
        'workflow': !exists(json, 'workflow') ? undefined : CiBuildRunRelationshipsWorkflowFromJSON(json['workflow']),
        'product': !exists(json, 'product') ? undefined : CiBuildRunRelationshipsProductFromJSON(json['product']),
        'sourceBranchOrTag': !exists(json, 'sourceBranchOrTag') ? undefined : CiBuildRunRelationshipsSourceBranchOrTagFromJSON(json['sourceBranchOrTag']),
        'destinationBranch': !exists(json, 'destinationBranch') ? undefined : CiBuildRunRelationshipsSourceBranchOrTagFromJSON(json['destinationBranch']),
        'actions': !exists(json, 'actions') ? undefined : AnalyticsReportInstanceRelationshipsSegmentsFromJSON(json['actions']),
        'pullRequest': !exists(json, 'pullRequest') ? undefined : CiBuildRunRelationshipsPullRequestFromJSON(json['pullRequest']),
    };
}

export function CiBuildRunRelationshipsToJSON(value?: CiBuildRunRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'builds': AppRelationshipsBuildsToJSON(value.builds),
        'workflow': CiBuildRunRelationshipsWorkflowToJSON(value.workflow),
        'product': CiBuildRunRelationshipsProductToJSON(value.product),
        'sourceBranchOrTag': CiBuildRunRelationshipsSourceBranchOrTagToJSON(value.sourceBranchOrTag),
        'destinationBranch': CiBuildRunRelationshipsSourceBranchOrTagToJSON(value.destinationBranch),
        'actions': AnalyticsReportInstanceRelationshipsSegmentsToJSON(value.actions),
        'pullRequest': CiBuildRunRelationshipsPullRequestToJSON(value.pullRequest),
    };
}

