/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories } from './EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories';
import {
    EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesFromJSON,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesFromJSONTyped,
    EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesToJSON,
} from './EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories';
import type { NominationCreateRequestDataRelationshipsInAppEvents } from './NominationCreateRequestDataRelationshipsInAppEvents';
import {
    NominationCreateRequestDataRelationshipsInAppEventsFromJSON,
    NominationCreateRequestDataRelationshipsInAppEventsFromJSONTyped,
    NominationCreateRequestDataRelationshipsInAppEventsToJSON,
} from './NominationCreateRequestDataRelationshipsInAppEvents';
import type { NominationCreateRequestDataRelationshipsRelatedApps } from './NominationCreateRequestDataRelationshipsRelatedApps';
import {
    NominationCreateRequestDataRelationshipsRelatedAppsFromJSON,
    NominationCreateRequestDataRelationshipsRelatedAppsFromJSONTyped,
    NominationCreateRequestDataRelationshipsRelatedAppsToJSON,
} from './NominationCreateRequestDataRelationshipsRelatedApps';

/**
 * 
 * @export
 * @interface NominationCreateRequestDataRelationships
 */
export interface NominationCreateRequestDataRelationships {
    /**
     * 
     * @type {NominationCreateRequestDataRelationshipsRelatedApps}
     * @memberof NominationCreateRequestDataRelationships
     */
    relatedApps: NominationCreateRequestDataRelationshipsRelatedApps;
    /**
     * 
     * @type {NominationCreateRequestDataRelationshipsInAppEvents}
     * @memberof NominationCreateRequestDataRelationships
     */
    inAppEvents?: NominationCreateRequestDataRelationshipsInAppEvents;
    /**
     * 
     * @type {EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories}
     * @memberof NominationCreateRequestDataRelationships
     */
    supportedTerritories?: EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories;
}

/**
 * Check if a given object implements the NominationCreateRequestDataRelationships interface.
 */
export function instanceOfNominationCreateRequestDataRelationships(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "relatedApps" in value;

    return isInstance;
}

export function NominationCreateRequestDataRelationshipsFromJSON(json: any): NominationCreateRequestDataRelationships {
    return NominationCreateRequestDataRelationshipsFromJSONTyped(json, false);
}

export function NominationCreateRequestDataRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NominationCreateRequestDataRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relatedApps': NominationCreateRequestDataRelationshipsRelatedAppsFromJSON(json['relatedApps']),
        'inAppEvents': !exists(json, 'inAppEvents') ? undefined : NominationCreateRequestDataRelationshipsInAppEventsFromJSON(json['inAppEvents']),
        'supportedTerritories': !exists(json, 'supportedTerritories') ? undefined : EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesFromJSON(json['supportedTerritories']),
    };
}

export function NominationCreateRequestDataRelationshipsToJSON(value?: NominationCreateRequestDataRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'relatedApps': NominationCreateRequestDataRelationshipsRelatedAppsToJSON(value.relatedApps),
        'inAppEvents': NominationCreateRequestDataRelationshipsInAppEventsToJSON(value.inAppEvents),
        'supportedTerritories': EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesToJSON(value.supportedTerritories),
    };
}

