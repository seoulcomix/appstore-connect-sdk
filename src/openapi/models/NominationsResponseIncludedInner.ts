/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Actor,
    instanceOfActor,
    ActorFromJSON,
    ActorFromJSONTyped,
    ActorToJSON,
} from './Actor';
import {
    App,
    instanceOfApp,
    AppFromJSON,
    AppFromJSONTyped,
    AppToJSON,
} from './App';
import {
    AppEvent,
    instanceOfAppEvent,
    AppEventFromJSON,
    AppEventFromJSONTyped,
    AppEventToJSON,
} from './AppEvent';
import {
    Territory,
    instanceOfTerritory,
    TerritoryFromJSON,
    TerritoryFromJSONTyped,
    TerritoryToJSON,
} from './Territory';

/**
 * @type NominationsResponseIncludedInner
 * 
 * @export
 */
export type NominationsResponseIncludedInner = Actor | App | AppEvent | Territory;

export function NominationsResponseIncludedInnerFromJSON(json: any): NominationsResponseIncludedInner {
    return NominationsResponseIncludedInnerFromJSONTyped(json, false);
}

export function NominationsResponseIncludedInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): NominationsResponseIncludedInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...ActorFromJSONTyped(json, true), ...AppFromJSONTyped(json, true), ...AppEventFromJSONTyped(json, true), ...TerritoryFromJSONTyped(json, true) };
}

export function NominationsResponseIncludedInnerToJSON(value?: NominationsResponseIncludedInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfActor(value)) {
        return ActorToJSON(value as Actor);
    }
    if (instanceOfApp(value)) {
        return AppToJSON(value as App);
    }
    if (instanceOfAppEvent(value)) {
        return AppEventToJSON(value as AppEvent);
    }
    if (instanceOfTerritory(value)) {
        return TerritoryToJSON(value as Territory);
    }

    return {};
}

