/* tslint:disable */
/* eslint-disable */
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RelationshipLinks } from './RelationshipLinks';
import {
    RelationshipLinksFromJSON,
    RelationshipLinksFromJSONTyped,
    RelationshipLinksToJSON,
} from './RelationshipLinks';
import type { SubscriptionRelationshipsSubscriptionAvailabilityData } from './SubscriptionRelationshipsSubscriptionAvailabilityData';
import {
    SubscriptionRelationshipsSubscriptionAvailabilityDataFromJSON,
    SubscriptionRelationshipsSubscriptionAvailabilityDataFromJSONTyped,
    SubscriptionRelationshipsSubscriptionAvailabilityDataToJSON,
} from './SubscriptionRelationshipsSubscriptionAvailabilityData';

/**
 * 
 * @export
 * @interface SubscriptionRelationshipsSubscriptionAvailability
 */
export interface SubscriptionRelationshipsSubscriptionAvailability {
    /**
     * 
     * @type {RelationshipLinks}
     * @memberof SubscriptionRelationshipsSubscriptionAvailability
     */
    links?: RelationshipLinks;
    /**
     * 
     * @type {SubscriptionRelationshipsSubscriptionAvailabilityData}
     * @memberof SubscriptionRelationshipsSubscriptionAvailability
     */
    data?: SubscriptionRelationshipsSubscriptionAvailabilityData;
}

/**
 * Check if a given object implements the SubscriptionRelationshipsSubscriptionAvailability interface.
 */
export function instanceOfSubscriptionRelationshipsSubscriptionAvailability(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SubscriptionRelationshipsSubscriptionAvailabilityFromJSON(json: any): SubscriptionRelationshipsSubscriptionAvailability {
    return SubscriptionRelationshipsSubscriptionAvailabilityFromJSONTyped(json, false);
}

export function SubscriptionRelationshipsSubscriptionAvailabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionRelationshipsSubscriptionAvailability {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : RelationshipLinksFromJSON(json['links']),
        'data': !exists(json, 'data') ? undefined : SubscriptionRelationshipsSubscriptionAvailabilityDataFromJSON(json['data']),
    };
}

export function SubscriptionRelationshipsSubscriptionAvailabilityToJSON(value?: SubscriptionRelationshipsSubscriptionAvailability | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': RelationshipLinksToJSON(value.links),
        'data': SubscriptionRelationshipsSubscriptionAvailabilityDataToJSON(value.data),
    };
}

